<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.cessda.cvmanager</groupId>
	<artifactId>CVGui</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>CVGui</name>
	<description>CV Manager GUI</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<vaadin.version>8.1.6</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		<gesis.repository.visibility>public</gesis.repository.visibility>
		<ddiflatdb.server.uri>http://localhost:8080/stardat-ddiflatdb</ddiflatdb.server.uri>
		<version.dockerfile-maven>1.2.2</version.dockerfile-maven>
	</properties>

	<repositories>
		<repository>
    		<id>gesis-${gesis.repository.visibility}</id>
    		<url>https://maven.gesis.org/repositories/gesis-${gesis.repository.visibility}</url>
  		</repository>
	
		
		
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>
	<pluginRepositories>
  		<pluginRepository>
    		<id>gesis-${gesis.repository.visibility}</id>
    		<url>https://maven.gesis.org/repositories/gesis-${gesis.repository.visibility}</url>
  		</pluginRepository>
	</pluginRepositories>


	<dependencies>

		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
   			<groupId>org.vaadin.addon</groupId>
   			<artifactId>confirmdialog</artifactId>
   			<version>3.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.vaadin.spring.extensions</groupId>
			<artifactId>vaadin-spring-ext-boot</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.spring.addons</groupId>
			<artifactId>vaadin-spring-addon-eventbus</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.gesis.stardat</groupId>
			<artifactId>stardat-ddiflatdb-rest</artifactId>
			<version>0.8.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.gesis.stardat</groupId>
			<artifactId>stardat-ddi-entities</artifactId>
			<version>0.0.2-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.gesis.security</groupId>
			<artifactId>gesis-security-proxy</artifactId>
			<version>0.0.2-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.vaadin</groupId>
		    <artifactId>viritin</artifactId>
		    <version>2.0</version>
		</dependency>
		
		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.1</version>
				</plugin>
				<!-- 
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.22.1</version>
				</plugin>
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<!-- This plugin's configuration is used to store Eclipse m2e settings only.
					     It has no influence on the Maven build itself. -->
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals><goal>run</goal></goals>
									</pluginExecutionFilter>
									<action><ignore></ignore></action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- 
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/docker</directory>
									<includes>
										<include>Dockerfile</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
			<!-- 
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.3</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>${basedir}/target/Dockerfile</file>
					<replacements>
						<replacement>
							<token>IMAGE_VERSION</token>
							<value>${project.version}</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
			-->
			<!-- 
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${version.dockerfile-maven}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<contextDirectory>${project.build.directory}</contextDirectory>
					<tag>${project.version}</tag>
				</configuration>
			</plugin>
			-->
			<!-- 
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>${project.artifactId}:${project.version}</name>
							<build>
								<dockerFileDir>${project.basedir}/target/docker/generated</dockerFileDir>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>gesis/${project.artifactId}</imageName>
					<dockerDirectory>src/main/resources/docker</dockerDirectory>
					<dockerHost>http://172.17.0.1:2375</dockerHost>
					
					<!-- overwrite tags -->
					<forceTags>true</forceTags>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.war</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
					<draftCompile>false</draftCompile>
					<compileReport>false</compileReport>
					<style>OBF</style>
					<strict>true</strict>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<!-- disabled by default to use on-the-fly theme compilation -->
							<!-- <goal>compile-theme</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.js</include>
		         	<include>**/*.xml</include>
		         	<include>**/*.json</include>
		            <include>**/*.java</include>
		            <include>**/*.gwt.xml</include>
		            <include>**/*.properties</include>
		            <include>application.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources/docker</directory>
				<filtering>true</filtering>
				<targetPath>${project.basedir}/target/docker/generated</targetPath>
				<includes><include>*</include></includes>
			</resource>
		</resources>
	</build>

	
	<profiles>
		 <profile>
            <id>local</id>
            <activation>
					<activeByDefault>true</activeByDefault>
			</activation>
            <properties>
                <tomcat.url>http://localhost:8080/manager/text</tomcat.url>
                <tomcat.username>admin</tomcat.username>
                <tomcat.password>Admin4Tomcat8</tomcat.password>
                <server.contextPath>/cvmanager-test</server.contextPath>
				<ddiflatdb.rest.url>http://localhost:8080/stardat-ddiflatdb</ddiflatdb.rest.url>
				<spring.datasource.url>jdbc:mysql://localhost:3306/cvmanager-security?useSSL=false</spring.datasource.url>
				<spring.datasource.username>cessda</spring.datasource.username>
				<spring.datasource.password>cessda01</spring.datasource.password>
            </properties>
            <build>
          		<plugins>
          	  		<plugin>
                		<groupId>org.apache.tomcat.maven</groupId>
                		<artifactId>tomcat7-maven-plugin</artifactId>
                		<configuration>
                    		<path>/cvmanager-test</path>
                    		<url>${tomcat.url}</url>
                    		<username>${tomcat.username}</username>
                    		<password>${tomcat.password}</password>
                		</configuration>
              		</plugin>
              	</plugins>
            </build>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <tomcat.url>http://10.6.13.128:9090/manager/text</tomcat.url>
                <tomcat.username>admin</tomcat.username>
                <tomcat.password>Admin4Tomcat8</tomcat.password>
                <server.contextPath>/cvmanager-test</server.contextPath>
                <ddiflatdb.rest.url>http://35.195.194.241:8080</ddiflatdb.rest.url>
				<spring.datasource.url>jdbc:mysql://svko-glesd:3306/cvmanager-security?useSSL=false</spring.datasource.url>
				<spring.datasource.username>root</spring.datasource.username>
				<spring.datasource.password>GVM8Sj8FUxBf4gk</spring.datasource.password>
            </properties>
            <build>
          		<plugins>
          	  		<plugin>
                		<groupId>org.apache.tomcat.maven</groupId>
                		<artifactId>tomcat7-maven-plugin</artifactId>
                		<version>2.1</version>
                		<configuration>
                    		<path>/cvmanager-test</path>
                    		<url>${tomcat.url}</url>
                    		<username>${tomcat.username}</username>
                    		<password>${tomcat.password}</password>
                		</configuration>
              		</plugin>
              	</plugins>
            </build>
        </profile>
        <profile>
            <id>production</id>
            <properties>
            	 <tomcat.url>http://10.6.13.128:8080/manager/text</tomcat.url>
                <tomcat.username>admin</tomcat.username>
                <tomcat.password>Admin4Tomcat8</tomcat.password>
                <server.contextPath>/cvmanager</server.contextPath>
				<ddiflatdb.rest.url>http://35.195.194.241:8080</ddiflatdb.rest.url>
                <spring.datasource.url>jdbc:mysql://svko-glesd:3306/cvmanager-security?useSSL=false</spring.datasource.url>
				<spring.datasource.username>root</spring.datasource.username>
				<spring.datasource.password>GVM8Sj8FUxBf4gk</spring.datasource.password>
            </properties>
            <build>
          		<plugins>
          	  		<plugin>
                		<groupId>org.apache.tomcat.maven</groupId>
                		<artifactId>tomcat7-maven-plugin</artifactId>
                		<version>2.1</version>
                		<configuration>
                    		<path>/cvmanager</path>
                    		<url>${tomcat.url}</url>
                    		<username>${tomcat.username}</username>
                    		<password>${tomcat.password}</password>
                		</configuration>
              		</plugin>
              	</plugins>
            </build>
        </profile>
    </profiles>


</project>
